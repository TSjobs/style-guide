- content_for :content do
  %h2
    Colors
  %p
    These colors are saved as scss variables.  Use these when possible.

  %hr


  - @main_colors.each do |color|
    = render partial: 'color_swatch', locals: { color: color }

  %hr.invisible

  - @secondary_colors.each do |color|
    = render partial: 'color_swatch', locals: { color: color }

  %hr.invisible

  %table{ :class => 'color-table large-12 column' }
    %tbody
      - @color_table.each do |row|
        %tr
          - row.each do |column|
            - if column.include? 'tsqd'
              %td{ :class => 'text-center color-check ' + column, :style => 'color: #000000 !important' }
                = column
            - else
              %td{ :class => 'text-center ' + column, :style => 'color: #000000 !important' }
                = column

  %hr.invisible
  %h3 On boarding colors
  %table{ :class => 'color-on-boarding-table large-12 column' }
    %tbody
      - @onboarding_colors.each do |row|
        %tr
          - row.each do |column|
            - if column.include? 'tsqd'
              %td{ :class => 'text-center color-check ' + column, :style => 'color: #000000 !important' }
                = column
            - else
              %td{ :class => 'text-center ' + column, :style => 'color: #000000 !important' }
                = column
  %hr.invisible
  %h3 Success and failure

  - @success_failure_colors.each do |color|
    = render partial: 'color_swatch', locals: { color: color }

  :javascript
    $(document).ready(function(){
      $('.color-check').each(function(){
        $this = $(this);
        rgb = $this.css('background-color');
        rgb = rgb.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i);
        if(rgb && rgb.length === 4) {
          bg = "#" + ("0" + parseInt(rgb[1],10).toString(16)).slice(-2) + ("0" + parseInt(rgb[2],10).toString(16)).slice(-2) + ("0" + parseInt(rgb[3],10).toString(16)).slice(-2);
        }
        if(rgb){
          $this.html($this.html() + '<br>' + bg);
        }
      });
    });

